
Component Specifications

Last Updated 11/04/2024 by Gerald Lee


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


## Dash
    startApp
        - Provides Graphical User Interface (GUI)
            - User interface to mouse over a point of interest on the pressure field.
            - User interface to change time scale for temperature graph
            - Allows change of variables through inputs and dropdown menus
            - Graphs figures using Plotly express and graph-objects
            - Provides callbacks to initiate large functions and calculations

Note: Dash provides a link to an online web based GUI service run from the machine. This, however, freezes the terminal. 
      CTRL+C kills the command, but once the script stops running then the webpage will also fail to return any callbacks called after killing the app. 
      Use instructions include to 1) open the link and 2) when ready to kill app, kill app in terminal.


## Python Functions

This function outputs a pressure field and its respective axes based on the given inputs.
calculateRayleighIntegral
    .generateField
        INPUT ARG
            trans == dictionary of transducer properties
                "freq" == [Hz] Transmit Frequency of transducer
                "radius" == [m] Radius of transducer probe
                "focus" == [m] Focal point in space 
                "initPressure" == [Pa] Initial Pressure output by transducer

            medium == [dict] dictionary of medium properties
                "speed" == [m/s] Speed of Sound
                "density" == [kg/m^3] Density 
                "absCoeff" == [Np/(m*MHz^2)] Absorption Coefficient

            field == calls 2D field properties
                "numAxialStep" == [int] Number of Axial Steps
                "numRadialStep" == [int] Number of Radial Steps
        OUTPUT ARG
            pressure_field == [2D list][p/p0] Resulting Rayleigh Integral Pressure Field
            z_axis == [1D list][m] Axial axis of Pressure Field
            r_axis == [1D list][m] Radial axis of Pressure Field 


This function outputs a temperature vector and its respective time axis based on the given inputs.
calculateBioheat
    .generateVector
        INPUT ARG
            axial_loc == [m] Coordinate Z of Interest Location
            radial_loc == [m] Coordinate R of Interest Location

            trans == dictionary of transducer properties
                "freq" == [Hz] Transmit Frequency of transducer
                "radius" == [m] Radius of transducer probe
                "focus" == [m] Focal point in space 
                "initPressure" == [Pa] Initial Pressure output by transducer

            medium == calls medium properties
                "speed" == [m/s] Speed of Sound
                "density" == [kg/m^3] Density 
                "absCoeff" == [Np/(m*MHz^2)] Absorption Coefficient
                "specHeatCap" == [J/(kg*K)] Specific Heat Capacity
                "thermDiff" == [(m^2)/s] Thermal Diffusivity 

            heat == calls heating parameters
                "numTime" == [s]
                "HeatTime" == [s]
                "CoolTime" == [s]
                "DutyCycle" == [%] 

            pressure2D == [2D list][p/p0] Rayleigh Integral Pressure Field
            z_values == [1D list][m] Axial axis of Pressure Field
            r_values == [1D list][m] Radial axis of Pressure Field 
            
        OUTPUT ARG
            time_axis == [1D list][s] Time Axis
            temp_vec == [1D list][Celsius] Temperature Vector over Time
            Q == [2D list][Joules] Heat Map 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


## Project Plan
- Week 6 (11/04/2024 - 11/08/2024)
    Planning Initial Plan for Functions, Inputs, Outputs

- Week 7 (11/11/2024 - 11/15/2024)
    Explore the use of Dash for GUI
    GUI draft and core functions completed
        - Locations to input parameters
            - Heating Pulse Regime
            - Transducer Properties
            - Medium Properties
        - Locations to mouse over data
            - 2D map
            - 1D graph

- Week 8 (11/18/2024 - 11/22/2024)
    Create functions
        - Popup Boxes
        - Bioheat Equation
        - Temperature Compliance
        - Acoustic Intensity

- Week 9 (11/25/2024 - 11/29/2024)
    Bug Fixes
    Finalize Presentation

- Week 10 (12/02/2024 - 12/06/2024)
    Present Work


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
